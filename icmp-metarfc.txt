
                   INTERNET CONTROL MESSAGE PROTOCOL


Introduction

   The Internet Protocol (IP) [1] is used for host-to-host datagram
   service in a system of interconnected networks called the
   Catenet [2].  The network connecting devices are called Gateways.
   These gateways communicate between themselves for control purposes
   via a Gateway to Gateway Protocol (GGP) [3,4].  Occasionally a
   gateway or destination host will communicate with a source host, for
   example, to report an error in datagram processing.  For such
   purposes this protocol, the Internet Control Message Protocol (ICMP),
   is used.  ICMP, uses the basic support of IP as if it were a higher
   level protocol, however, ICMP is actually an integral part of IP, and
   must be implemented by every IP module.

   ICMP messages are sent in several situations:  for example, when a
   datagram cannot reach its destination, when the gateway does not have
   the buffering capacity to forward a datagram, and when the gateway
   can direct the host to send traffic on a shorter route.

   The Internet Protocol is not designed to be absolutely reliable.  The
   purpose of these control messages is to provide feedback about
   problems in the communication environment, not to make IP reliable.
   There are still no guarantees that a datagram will be delivered or a
   control message will be returned.  Some datagrams may still be
   undelivered without any report of their loss.  The higher level
   protocols that use IP must implement their own reliability procedures
   if reliable communication is required.

   The ICMP messages typically report errors in the processing of
   datagrams.  To avoid the infinite regress of messages about messages
   etc., no ICMP messages are sent about ICMP messages.  Also ICMP
   messages are only sent about errors in handling fragment zero of
   fragmented datagrams.  (Fragment zero has the fragment offeset equal
   zero).



Message Formats

   ICMP messages are sent using the basic IP header.  The first octet of
   the data portion of the datagram is a ICMP type field; the value of
   this field determines the format of the remaining data.  Any field
   labeled "unused" is reserved for later extensions and must be zero
   when sent, but receivers should not use these fields (except to
   include them in the checksum).  Unless otherwise noted under the
   individual format descriptions, the values of the internet header
   fields are as follows:

   Version

      4

   IHL

      Internet header length in 32-bit words.

   Type of Service

      0

   Total Length

      Length of internet header and data in octets.

   Identification, Flags, Fragment Offset

      Used in fragmentation, see [1].

   Time to Live

      Time to live in seconds; as this field is decremented at each
      machine in which the datagram is processed, the value in this
      field should be at least as great as the number of gateways which
      this datagram will traverse.

   Protocol

      ICMP = 1

   Header Checksum

      The 16 bit one's complement of the one's complement sum of all 16
      bit words in the header.  For computing the checksum, the checksum
      field should be zero.  This checksum may be replaced in the
      future.



   Source Address

      The address of the gateway or host that composes the ICMP message.
      Unless otherwise noted, this can be any of a gateway's addresses.

   Destination Address

      The address of the gateway or host to which the message should be
      sent.



Destination Unreachable Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             unused                            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      Internet Header + 64 bits of Original Data Datagram      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   IP Fields:

   Destination Address

      The source network and address from the original datagram's data.

   ICMP Fields:

   Type

      3

   Code

      0 = net unreachable;

      1 = host unreachable;

      2 = protocol unreachable;

      3 = port unreachable;

      4 = fragmentation needed and DF set;

      5 = source route failed.

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      This checksum may be replaced in the future.

   Internet Header + 64 bits of Data Datagram

      The internet header plus the first 64 bits of the original
      datagram's data.  This data is used by the host to match the
      message to the appropriate process.  If a higher level protocol
      uses port numbers, they are assumed to be in the first 64 data
      bits of the original datagram's data.

   Description

      If, according to the information in the gateway's routing tables,
      the network specified in the internet destination field of a
      datagram is unreachable, e.g., the distance to the network is
      infinity, the gateway may send a destination unreachable message
      to the internet source host of the datagram.  In addition, in some
      networks, the gateway may be able to determine if the internet
      destination host is unreachable.  Gateways in these networks may
      send destination unreachable messages to the source host when the
      destination host is unreachable.

      If, in the destination host, the IP module cannot deliver the
      datagram  because the indicated protocol module or process port is
      not active, the destination host may send a destination
      unreachable message to the source host.

      Another case is when a datagram must be fragmented to be forwarded
      by a gateway yet the Don't Fragment flag is on.  In this case the
      gateway must discard the datagram and may return a destination
      unreachable message.

      Codes 0, 1, 4, and 5 may be received from a gateway.  Codes 2 and
      3 may be received from a host.

   Requirements for Internet Hosts

   The following additional codes are hereby defined:

             6 = destination network unknown.

             7 = destination host unknown.

             8 = source host isolated.

             9 = communication with destination network
                      administratively prohibited.

             10 = communication with destination host
                      administratively prohibited.

             11 = network unreachable for type of service.

             12 = host unreachable for type of service.

   A host SHOULD generate Destination Unreachable messages with
   code:

      2    (Protocol Unreachable), when the designated transport
           protocol is not supported; or

      3    (Port Unreachable), when the designated transport
           protocol (e.g., UDP) is unable to demultiplex the
           datagram but has no protocol mechanism to inform the
           sender.

      A Destination Unreachable message that is received MUST be
      reported to the transport layer.  The transport layer SHOULD
      use the information appropriately; for example, see Sections
      4.1.3.3, 4.2.3.9, and 4.2.4 below.  A transport protocol
      that has its own mechanism for notifying the sender that a
      port is unreachable (e.g., TCP, which sends RST segments)
      MUST nevertheless accept an ICMP Port Unreachable for the
      same purpose.

      A Destination Unreachable message that is received with code
      0 (Net), 1 (Host), or 5 (Bad Source Route) may result from a
      routing transient and MUST therefore be interpreted as only
      a hint, not proof, that the specified destination is
      unreachable [IP:11].  For example, it MUST NOT be used as
      proof of a dead gateway (see Section 3.3.1).

   Requirements for IP Version 4 Routers

      If a router cannot forward a packet because it has no routes at all
      (including no default route) to the destination specified in the
      packet, then the router MUST generate a Destination Unreachable, Code
      0 (Network Unreachable) ICMP message.  If the router does have routes
      to the destination network specified in the packet but the TOS
      specified for the routes is neither the default TOS (0000) nor the
      TOS of the packet that the router is attempting to route, then the
      router MUST generate a Destination Unreachable, Code 11 (Network
      Unreachable for TOS) ICMP message.

      If a packet is to be forwarded to a host on a network that is
      directly connected to the router (i.e., the router is the last-hop
      router) and the router has ascertained that there is no path to the
      destination host then the router MUST generate a Destination
      Unreachable, Code 1 (Host Unreachable) ICMP message.  If a packet is
      to be forwarded to a host that is on a network that is directly
      connected to the router and the router cannot forward the packet
      because no route to the destination has a TOS that is either equal to
      the TOS requested in the packet or is the default TOS (0000) then the
      router MUST generate a Destination Unreachable, Code 12 (Host
      Unreachable for TOS) ICMP message.

      DISCUSSION
         The intent is that a router generates the "generic" host/network
         unreachable if it has no path at all (including default routes) to
         the destination.  If the router has one or more paths to the
         destination, but none of those paths have an acceptable TOS, then
         the router generates the "unreachable for TOS" message.


Time Exceeded Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             unused                            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      Internet Header + 64 bits of Original Data Datagram      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   IP Fields:

   Destination Address

      The source network and address from the original datagram's data.

   ICMP Fields:

   Type

      11

   Code

      0 = time to live exceeded in transit;

      1 = fragment reassembly time exceeded.

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      This checksum may be replaced in the future.

   Internet Header + 64 bits of Data Datagram

      The internet header plus the first 64 bits of the original
      datagram's data.  This data is used by the host to match the
      message to the appropriate process.  If a higher level protocol
      uses port numbers, they are assumed to be in the first 64 data
      bits of the original datagram's data.

   Description

      If the gateway processing a datagram finds the time to live field
      is zero it must discard the datagram.  The gateway may also notify
      the source host via the time exceeded message.

      If a host reassembling a fragmented datagram cannot complete the
      reassembly due to missing fragments within its time limit it
      discards the datagram, and it may send a time exceeded message.

      If fragment zero is not available then no time exceeded need be
      sent at all.

      Code 0 may be received from a gateway.  Code 1 may be received
      from a host.

   Requirements for Internet Hosts

      An incoming Time Exceeded message MUST be passed to the
      transport layer.

      DISCUSSION:
           A gateway will send a Time Exceeded Code 0 (In Transit)
           message when it discards a datagram due to an expired
           TTL field.  This indicates either a gateway routing
           loop or too small an initial TTL value.

           A host may receive a Time Exceeded Code 1 (Reassembly
           Timeout) message from a destination host that has timed
           out and discarded an incomplete datagram; see Section
           3.3.2 below.  In the future, receipt of this message
           might be part of some "MTU discovery" procedure, to
           discover the maximum datagram size that can be sent on
           the path without fragmentation.

   Requirements for IP Version 4 Routers

      When a router is forwarding a packet and the TTL field of the packet
      is reduced to 0, the requirements of section [5.2.3.8] apply.

      When the router is reassembling a packet that is destined for the
      router, it is acting as an Internet host.  [INTRO:2]'s reassembly
      requirements therefore apply.

      When the router receives (i.e., is destined for the router) a Time
      Exceeded message, it MUST comply with [INTRO:2].



Parameter Problem Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |    Pointer    |                   unused                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      Internet Header + 64 bits of Original Data Datagram      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   IP Fields:

   Destination Address

      The source network and address from the original datagram's data.

   ICMP Fields:

   Type

      12

   Code

      0 = pointer indicates the error.

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      This checksum may be replaced in the future.

   Pointer

      If code = 0, identifies the octet where an error was detected.

   Internet Header + 64 bits of Data Datagram

      The internet header plus the first 64 bits of the original
      datagram's data.  This data is used by the host to match the
      message to the appropriate process.  If a higher level protocol
      uses port numbers, they are assumed to be in the first 64 data
      bits of the original datagram's data.

   Description

      If the gateway or host processing a datagram finds a problem with
      the header parameters such that it cannot complete processing the
      datagram it must discard the datagram.  One potential source of
      such a problem is with incorrect arguments in an option.  The
      gateway or host may also notify the source host via the parameter
      problem message.  This message is only sent if the error caused
      the datagram to be discarded.

      The pointer identifies the octet of the original datagram's header
      where the error was detected (it may be in the middle of an
      option).  For example, 1 indicates something is wrong with the
      Type of Service, and (if there are options present) 20 indicates
      something is wrong with the type code of the first option.

      Code 0 may be received from a gateway or a host.

   Requirements for Internet Hosts

      A host SHOULD generate Parameter Problem messages.  An
      incoming Parameter Problem message MUST be passed to the
      transport layer, and it MAY be reported to the user.

      DISCUSSION:
           The ICMP Parameter Problem message is sent to the
           source host for any problem not specifically covered by
           another ICMP message.  Receipt of a Parameter Problem
           message generally indicates some local or remote
           implementation error.

      A new variant on the Parameter Problem message is hereby
      defined:
        Code 1 = required option is missing.

      DISCUSSION:
           This variant is currently in use in the military
           community for a missing security option.

   Requirements for IP Version 4 Routers

      A router MUST generate a Parameter Problem message for any error not
      specifically covered by another ICMP message.  The IP header field or
      IP option including the byte indicated by the pointer field MUST be
      included unchanged in the IP header returned with this ICMP message.
      Section [4.3.2] defines an exception to this requirement.

      A new variant of the Parameter Problem message was defined in
      [INTRO:2]:
           Code 1 = required option is missing.

      DISCUSSION
         This variant is currently in use in the military community for a
         missing security option.


Source Quench Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                             unused                            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      Internet Header + 64 bits of Original Data Datagram      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   IP Fields:

   Destination Address

      The source network and address of the original datagram's data.

   ICMP Fields:

   Type

      4

   Code

      0

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      This checksum may be replaced in the future.

   Internet Header + 64 bits of Data Datagram

      The internet header plus the first 64 bits of the original
      datagram's data.  This data is used by the host to match the
      message to the appropriate process.  If a higher level protocol
      uses port numbers, they are assumed to be in the first 64 data
      bits of the original datagram's data.

   Description

      A gateway may discard internet datagrams if it does not have the
      buffer space needed to queue the datagrams for output to the next
      network on the route to the destination network.  If a gateway
      discards a datagram, it may send a source quench message to the
      internet source host of the datagram.  A destination host may also
      send a source quench message if datagrams arrive too fast to be
      processed.  The source quench message is a request to the host to
      cut back the rate at which it is sending traffic to the internet
      destination.  The gateway may send a source quench message for
      every message that it discards.  On receipt of a source quench
      message, the source host should cut back the rate at which it is
      sending traffic to the specified destination until it no longer
      receives source quench messages from the gateway.  The source host
      can then gradually increase the rate at which it sends traffic to
      the destination until it again receives source quench messages.

      The gateway or host may send the source quench message when it
      approaches its capacity limit rather than waiting until the
      capacity is exceeded.  This means that the data datagram which
      triggered the source quench message may be delivered.

      Code 0 may be received from a gateway or a host.

   Requirements for Internet Hosts

      A host MAY send a Source Quench message if it is
      approaching, or has reached, the point at which it is forced
      to discard incoming datagrams due to a shortage of
      reassembly buffers or other resources.  See Section 2.2.3 of
      [INTRO:2] for suggestions on when to send Source Quench.

      If a Source Quench message is received, the IP layer MUST
      report it to the transport layer (or ICMP processing). In
      general, the transport or application layer SHOULD implement
      a mechanism to respond to Source Quench for any protocol
      that can send a sequence of datagrams to the same
      destination and which can reasonably be expected to maintain
      enough state information to make this feasible.  See Section
      4 for the handling of Source Quench by TCP and UDP.

      DISCUSSION:
           A Source Quench may be generated by the target host or
           by some gateway in the path of a datagram.  The host
           receiving a Source Quench should throttle itself back
           for a period of time, then gradually increase the
           transmission rate again.  The mechanism to respond to
           Source Quench may be in the transport layer (for
           connection-oriented protocols like TCP) or in the
           application layer (for protocols that are built on top
           of UDP).

           A mechanism has been proposed [IP:14] to make the IP
           layer respond directly to Source Quench by controlling
           the rate at which datagrams are sent, however, this
           proposal is currently experimental and not currently
           recommended.

   Requirements for IP Version 4 Routers

      A router SHOULD NOT originate ICMP Source Quench messages.  As
      specified in Section [4.3.2], a router that does originate Source
      Quench messages MUST be able to limit the rate at which they are
      generated.

      DISCUSSION
         Research seems to suggest that Source Quench consumes network
         bandwidth but is an ineffective (and unfair) antidote to
         congestion.  See, for example, [INTERNET:9] and [INTERNET:10].
         Section [5.3.6] discusses the current thinking on how routers
         ought to deal with overload and network congestion.

      A router MAY ignore any ICMP Source Quench messages it receives.

      DISCUSSION
         A router itself may receive a Source Quench as the result of
         originating a packet sent to another router or host.  Such
         datagrams might be, e.g., an EGP update sent to another router, or
         a telnet stream sent to a host.  A mechanism has been proposed
         ([INTERNET:11], [INTERNET:12]) to make the IP layer respond
         directly to Source Quench by controlling the rate at which packets
         are sent, however, this proposal is currently experimental and not
         currently recommended.


Redirect Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                 Gateway Internet Address                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      Internet Header + 64 bits of Original Data Datagram      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   IP Fields:

   Destination Address

      The source network and address of the original datagram's data.

   ICMP Fields:

   Type

      5

   Code

      0 = Redirect datagrams for the Network.

      1 = Redirect datagrams for the Host.

      2 = Redirect datagrams for the Type of Service and Network.

      3 = Redirect datagrams for the Type of Service and Host.

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      This checksum may be replaced in the future.

   Gateway Internet Address

      Address of the gateway to which traffic for the network specified
      in the internet destination network field of the original
      datagram's data should be sent.

   Internet Header + 64 bits of Data Datagram

      The internet header plus the first 64 bits of the original
      datagram's data.  This data is used by the host to match the
      message to the appropriate process.  If a higher level protocol
      uses port numbers, they are assumed to be in the first 64 data
      bits of the original datagram's data.

   Description

      The gateway sends a redirect message to a host in the following
      situation.  A gateway, G1, receives an internet datagram from a
      host on a network to which the gateway is attached.  The gateway,
      G1, checks its routing table and obtains the address of the next
      gateway, G2, on the route to the datagram's internet destination
      network, X.  If G2 and the host identified by the internet source
      address of the datagram are on the same network, a redirect
      message is sent to the host.  The redirect message advises the
      host to send its traffic for network X directly to gateway G2 as
      this is a shorter path to the destination.  The gateway forwards
      the original datagram's data to its internet destination.

      For datagrams with the IP source route options and the gateway
      address in the destination address field, a redirect message is
      not sent even if there is a better route to the ultimate
      destination than the next address in the source route.

      Codes 0, 1, 2, and 3 may be received from a gateway.

   Requirements for Internet Hosts

      A host SHOULD NOT send an ICMP Redirect message; Redirects
      are to be sent only by gateways.

      A host receiving a Redirect message MUST update its routing
      information accordingly.  Every host MUST be prepared to
      accept both Host and Network Redirects and to process them
      as described in Section 3.3.1.2 below.

      A Redirect message SHOULD be silently discarded if the new
      gateway address it specifies is not on the same connected
      (sub-) net through which the Redirect arrived [INTRO:2,
      Appendix A], or if the source of the Redirect is not the
      current first-hop gateway for the specified destination (see
      Section 3.3.1).

   Requirements for IP Version 4 Routers

      The ICMP Redirect message is generated to inform a local host that it
      should use a different next hop router for certain traffic.

      Contrary to [INTRO:2], a router MAY ignore ICMP Redirects when
      choosing a path for a packet originated by the router if the router
      is running a routing protocol or if forwarding is enabled on the
      router and on the interface over which the packet is being sent.


Echo or Echo Reply Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Code      |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Identifier          |        Sequence Number        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Data ...
   +-+-+-+-+-

   IP Fields:

   Addresses

      The address of the source in an echo message will be the
      destination of the echo reply message.  To form an echo reply
      message, the source and destination addresses are simply reversed,
      the type code changed to 0, and the checksum recomputed.

   IP Fields:

   Type

      8 for echo message;

      0 for echo reply message.

   Code

      0

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      If the total length is odd, the received data is padded with one
      octet of zeros for computing the checksum.  This checksum may be
      replaced in the future.

   Identifier

      If code = 0, an identifier to aid in matching echos and replies,
      may be zero.

   Sequence Number

      If code = 0, a sequence number to aid in matching echos and
      replies, may be zero.

   Description

      The data received in the echo message must be returned in the echo
      reply message.

      The identifier and sequence number may be used by the echo sender
      to aid in matching the replies with the echo requests.  For
      example, the identifier might be used like a port in TCP or UDP to
      identify a session, and the sequence number might be incremented
      on each echo request sent.  The echoer returns these same values
      in the echo reply.

      Code 0 may be received from a gateway or a host.

   Requirements for Internet Hosts

      Every host MUST implement an ICMP Echo server function that
      receives Echo Requests and sends corresponding Echo Replies.
      A host SHOULD also implement an application-layer interface
      for sending an Echo Request and receiving an Echo Reply, for
      diagnostic purposes.

      An ICMP Echo Request destined to an IP broadcast or IP
      multicast address MAY be silently discarded.

      DISCUSSION:
           This neutral provision results from a passionate debate
           between those who feel that ICMP Echo to a broadcast
           address provides a valuable diagnostic capability and
           those who feel that misuse of this feature can too
           easily create packet storms.

      The IP source address in an ICMP Echo Reply MUST be the same
      as the specific-destination address (defined in Section
      3.2.1.3) of the corresponding ICMP Echo Request message.

      Data received in an ICMP Echo Request MUST be entirely
      included in the resulting Echo Reply.  However, if sending
      the Echo Reply requires intentional fragmentation that is
      not implemented, the datagram MUST be truncated to maximum
      transmission size (see Section 3.3.3) and sent.

      Echo Reply messages MUST be passed to the ICMP user
      interface, unless the corresponding Echo Request originated
      in the IP layer.

      If a Record Route and/or Time Stamp option is received in an
      ICMP Echo Request, this option (these options) SHOULD be
      updated to include the current host and included in the IP
      header of the Echo Reply message, without "truncation".
      Thus, the recorded route will be for the entire round trip.

      If a Source Route option is received in an ICMP Echo
      Request, the return route MUST be reversed and used as a
      Source Route option for the Echo Reply message.

   Requirements for IP Version 4 Routers

      A router MUST implement an ICMP Echo server function that receives
      Echo Requests sent to the router, and sends corresponding Echo
      Replies.  A router MUST be prepared to receive, reassemble and echo
      an ICMP Echo Request datagram at least as the maximum of 576 and the
      MTUs of all the connected networks.

      The Echo server function MAY choose not to respond to ICMP echo
      requests addressed to IP broadcast or IP multicast addresses.

      A router SHOULD have a configuration option that, if enabled, causes
      the router to silently ignore all ICMP echo requests; if provided,
      this option MUST default to allowing responses.

      DISCUSSION
         The neutral provision about responding to broadcast and multicast
         Echo Requests derives from [INTRO:2]'s "Echo Request/Reply"
         section.

      As stated in Section [10.3.3], a router MUST also implement a
      user/application-layer interface for sending an Echo Request and
      receiving an Echo Reply, for diagnostic purposes.  All ICMP Echo
      Reply messages MUST be passed to this interface.

      The IP source address in an ICMP Echo Reply MUST be the same as the
      specific-destination address of the corresponding ICMP Echo Request
      message.

      Data received in an ICMP Echo Request MUST be entirely included in
      the resulting Echo Reply.

      If a Record Route and/or Timestamp option is received in an ICMP Echo
      Request, this option (these options) SHOULD be updated to include the
      current router and included in the IP header of the Echo Reply
      message, without truncation.  Thus, the recorded route will be for
      the entire round trip.

      If a Source Route option is received in an ICMP Echo Request, the
      return route MUST be reversed and used as a Source Route option for
      the Echo Reply message, unless the router is aware of policy that
      would prevent the delivery of the message.


Timestamp or Timestamp Reply Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |      Code     |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Identifier          |        Sequence Number        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Originate Timestamp                                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Receive Timestamp                                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Transmit Timestamp                                        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   IP Fields:

   Addresses

      The address of the source in a timestamp message will be the
      destination of the timestamp reply message.  To form a timestamp
      reply message, the source and destination addresses are simply
      reversed, the type code changed to 14, and the checksum
      recomputed.

   ICMP Fields:

   Type

      13 for timestamp message;

      14 for timestamp reply message.

   Code

      0

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      This checksum may be replaced in the future.

   Identifier

      If code = 0, an identifier to aid in matching timestamp and
      replies, may be zero.

   Sequence Number

      If code = 0, a sequence number to aid in matching timestamp and
      replies, may be zero.

   Description

      The data received (a timestamp) in the message is returned in the
      reply together with an additional timestamp.  The timestamp is 32
      bits of milliseconds since midnight UT.  One use of these
      timestamps is described by Mills [5].

      The Originate Timestamp is the time the sender last touched the
      message before sending it, the Receive Timestamp is the time the
      echoer first touched it on receipt, and the Transmit Timestamp is
      the time the echoer last touched the message on sending it.

      If the time is not available in miliseconds or cannot be provided
      with respect to midnight UT then any time can be inserted in a
      timestamp provided the high order bit of the timestamp is also set
      to indicate this non-standard value.

      The identifier and sequence number may be used by the echo sender
      to aid in matching the replies with the requests.  For example,
      the identifier might be used like a port in TCP or UDP to identify
      a session, and the sequence number might be incremented on each
      request sent.  The destination returns these same values in the
      reply.

      Code 0 may be received from a gateway or a host.

   Requirements for Internet Hosts

      A host MAY implement Timestamp and Timestamp Reply.  If they
      are implemented, the following rules MUST be followed.

      o    The ICMP Timestamp server function returns a Timestamp
           Reply to every Timestamp message that is received.  If
           this function is implemented, it SHOULD be designed for
           minimum variability in delay (e.g., implemented in the
           kernel to avoid delay in scheduling a user process).

      The following cases for Timestamp are to be handled
      according to the corresponding rules for ICMP Echo:

      o    An ICMP Timestamp Request message to an IP broadcast or
           IP multicast address MAY be silently discarded.

      o    The IP source address in an ICMP Timestamp Reply MUST
           be the same as the specific-destination address of the
           corresponding Timestamp Request message.

      o    If a Source-route option is received in an ICMP Echo
           Request, the return route MUST be reversed and used as
           a Source Route option for the Timestamp Reply message.

      o    If a Record Route and/or Timestamp option is received
           in a Timestamp Request, this (these) option(s) SHOULD
           be updated to include the current host and included in
           the IP header of the Timestamp Reply message.

      o    Incoming Timestamp Reply messages MUST be passed up to
           the ICMP user interface.

      The preferred form for a timestamp value (the "standard
      value") is in units of milliseconds since midnight Universal
      Time.  However, it may be difficult to provide this value
      with millisecond resolution.  For example, many systems use
      clocks that update only at line frequency, 50 or 60 times
      per second.  Therefore, some latitude is allowed in a
      "standard value":

      (a)  A "standard value" MUST be updated at least 15 times
           per second (i.e., at most the six low-order bits of the
           value may be undefined).

      (b)  The accuracy of a "standard value" MUST approximate
           that of operator-set CPU clocks, i.e., correct within a
           few minutes.

   Requirements for IP Version 4 Routers

      A router MAY implement Timestamp and Timestamp Reply.  If they are
      implemented then:

      o The ICMP Timestamp server function MUST return a Timestamp Reply to
         every Timestamp message that is received.  It SHOULD be designed
         for minimum variability in delay.

      o An ICMP Timestamp Request message to an IP broadcast or IP
         multicast address MAY be silently discarded.

      o The IP source address in an ICMP Timestamp Reply MUST be the same
         as the specific-destination address of the corresponding Timestamp
         Request message.

      o If a Source Route option is received in an ICMP Timestamp Request,
         the return route MUST be reversed and used as a Source Route
         option for the Timestamp Reply message, unless the router is aware
         of policy that would prevent the delivery of the message.

      o If a Record Route and/or Timestamp option is received in a
         Timestamp Request, this (these) option(s) SHOULD be updated to
         include the current router and included in the IP header of the
         Timestamp Reply message.

      o If the router provides an application-layer interface for sending
         Timestamp Request messages then incoming Timestamp Reply messages
         MUST be passed up to the ICMP user interface.

      The preferred form for a timestamp value (the standard value) is
      milliseconds since midnight, Universal Time.  However, it may be
      difficult to provide this value with millisecond resolution.  For
      example, many systems use clocks that update only at line frequency,
      50 or 60 times per second.  Therefore, some latitude is allowed in a
      standard value:

      (a) A standard value MUST be updated at least 16 times per second
           (i.e., at most the six low-order bits of the value may be
           undefined).

      (b) The accuracy of a standard value MUST approximate that of
           operator-set CPU clocks, i.e., correct within a few minutes.

      IMPLEMENTATION
         To meet the second condition, a router may need to query some time
         server when the router is booted or restarted.  It is recommended
         that the UDP Time Server Protocol be used for this purpose.  A
         more advanced implementation would use the Network Time Protocol
         (NTP) to achieve nearly millisecond clock synchronization;
         however, this is not required.


Information Request or Information Reply Message

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |      Code     |          Checksum             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           Identifier          |        Sequence Number        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   IP Fields:

   Addresses

      The address of the source in a information request message will be
      the destination of the information reply message.  To form a
      information reply message, the source and destination addresses
      are simply reversed, the type code changed to 16, and the checksum
      recomputed.

   ICMP Fields:

   Type

      15 for information request message;

      16 for information reply message.

   Code

      0

   Checksum

      The checksum is the 16-bit one's complement of the one's
      complement sum of the ICMP message starting with the ICMP Type.
      For computing the checksum , the checksum field should be zero.
      This checksum may be replaced in the future.

   Identifier

      If code = 0, an identifier to aid in matching request and replies,
      may be zero.

   Sequence Number

      If code = 0, a sequence number to aid in matching request and
      replies, may be zero.

   Description

      This message may be sent with the source network in the IP header
      source and destination address fields zero (which means "this"
      network).  The replying IP module should send the reply with the
      addresses fully specified.  This message is a way for a host to
      find out the number of the network it is on.

      The identifier and sequence number may be used by the echo sender
      to aid in matching the replies with the requests.  For example,
      the identifier might be used like a port in TCP or UDP to identify
      a session, and the sequence number might be incremented on each
      request sent.  The destination returns these same values in the
      reply.

      Code 0 may be received from a gateway or a host.

   Requirements for Internet Hosts

      A host SHOULD NOT implement these messages.

      DISCUSSION:
           The Information Request/Reply pair was intended to
           support self-configuring systems such as diskless
           workstations, to allow them to discover their IP
           network numbers at boot time.  However, the RARP and
           BOOTP protocols provide better mechanisms for a host to
           discover its own IP address.

   Requirements for IP Version 4 Routers

   A router SHOULD NOT originate or respond to these messages.

   DISCUSSION
      The Information Request/Reply pair was intended to support self-
      configuring systems such as diskless workstations, to allow them
      to discover their IP network prefixes at boot time.  However,
      these messages are now obsolete.  The RARP and BOOTP protocols
      provide better mechanisms for a host to discover its own IP
      address.


Summary of Message Types

    0  Echo Reply

    3  Destination Unreachable

    4  Source Quench

    5  Redirect

    8  Echo

   11  Time Exceeded

   12  Parameter Problem

   13  Timestamp

   14  Timestamp Reply

   15  Information Request

   16  Information Reply



References

   [1]  Postel, J. (ed.), "Internet Protocol - DARPA Internet Program
         Protocol Specification," RFC 791, USC/Information Sciences
         Institute, September 1981.

   [2]   Cerf, V., "The Catenet Model for Internetworking," IEN 48,
         Information Processing Techniques Office, Defense Advanced
         Research Projects Agency, July 1978.

   [3]   Strazisar, V., "Gateway Routing:  An Implementation
         Specification", IEN 30, Bolt Beranek and Newman, April 1979.

   [4]   Strazisar, V., "How to Build a Gateway", IEN 109, Bolt Beranek
         and Newman, August 1979.

   [5]   Mills, D., "DCNET Internet Clock Service," RFC 778, COMSAT
         Laboratories, April 1981.
